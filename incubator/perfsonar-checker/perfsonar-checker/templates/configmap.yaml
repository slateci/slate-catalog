apiVersion: v1
kind: ConfigMap
metadata:
  name: perfsonar-checker-{{ .Values.Instance }}-startup
  labels:
    app: {{ template "perfsonar-checker.name" . }}
    chart: {{ template "perfsonar-checker.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance | quote }}
data:
  startup_script.sh: |+
    #!/bin/bash
    whoami
    stat /usr/bin/pscheduler
    echo "*/2 * * * * /usr/bin/run-my-tests.sh > /tmp/cron.out" > /var/spool/cron/root
    sleep 600
#    /usr/local/sbin/supervisord_startup.sh
#    echo "Starting Tests..."
    #/usr/bin/pscheduler task throughput -t 10 --dest sl-um-ps01.slateci.io
    #echo "Done with all tests.." 
#    echo "Sleeping for 3 mins.."
#    sleep 360

  run-my-tests.sh: |+
    #!/bin/bash
    echo "Starting Tests..."
    #/usr/bin/pscheduler task throughput -t 10 --dest sl-um-ps01.slateci.io
    /usr/bin/pscheduler troubleshoot
    echo "Done with all tests.." 
    echo "Sleeping for 3 mins.."
    sleep 360
  supervisord.conf: |+
    [supervisord]
    nodaemon=true
    
    [program:rsyslog]
    command=rsyslogd -n 
    redirect_stderr=true
    priority=1 
   
    ;[program:owampd]
    ;chown=owamp:owamp
    ;command=/usr/bin/owampd -c /etc/owamp-server -R /var/run
    
    ;[program:ls_registration_daemon]
    ;chown=perfsonar:perfsonar
    ;command=/usr/lib/perfsonar/bin/lsregistrationdaemon.pl --config=/etc/perfsonar/lsregistrationdaemon.conf --pidfile=/var/run/lsregistrationdaemon.pid --logger=/etc/perfsonar/lsregistrationdaemon-logger.conf --user=perfsonar --group=perfsonar
    ;priority=2   
    ;startretries=10
    
    [program:postgresql]                        ; postgress is needed by pscheduler
    command=/usr/pgsql-10/bin/postgres -D /var/lib/pgsql/10/data
    user=postgres
    priority=1
    
    [program:httpd]                             ;  httpd is needed by pscheduler
    command=/usr/bin/pidproxy /var/run/httpd.pid /bin/bash -c "/usr/sbin/httpd -DFOREGROUND -k start"
    priority=1
    
    [program:pscheduler-ticker]
    chown=pscheduler:pscheduler
    command=/usr/bin/python3 /usr/libexec/pscheduler/daemons/ticker --daemon --pid-file /var/run/pscheduler-ticker.pid --dsn @/etc/pscheduler/database/database-dsn 
    priority=1
    
    [program:pscheduler-archiver]
    chown=pscheduler:pscheduler
    command=/usr/bin/python3 /usr/libexec/pscheduler/daemons/archiver --daemon --pid-file /var/run/pscheduler-archiver.pid --dsn @/etc/pscheduler/database/database-dsn 
    priority=1
    
    [program:pscheduler-scheduler]
    chown=pscheduler:pscheduler
    command=/usr/bin/python3 /usr/libexec/pscheduler/daemons/scheduler --daemon --pid-file /var/run/pscheduler-scheduler.pid --dsn @/etc/pscheduler/database/database-dsn 
    priority=1
    
    [program:pscheduler-runner]
    chown=pscheduler:pscheduler
    command=/usr/bin/python3 /usr/libexec/pscheduler/daemons/runner --daemon --pid-file /var/run/pscheduler-runner.pid --dsn @/etc/pscheduler/database/database-dsn 
    priority=1
    
    ;[program:psconfig_pscheduler_agent]
    ;chown=perfsonar:perfsonar
    ;command=/usr/lib/perfsonar/bin/psconfig_pscheduler_agent --config=/etc/perfsonar/psconfig/pscheduler-agent.json --logger=/etc/perfsonar/psconfig/pscheduler-agent-logger.conf --pidfile=/var/run/psconfig-pscheduler-agent.pid --user=perfsonar --group=perfsonar
    ;priority=2
    ;startretries=10
 
    [program:slate-tests]
    command=/usr/local/bin/run-perfsonar-tests.sh -dest1 "{{ .Values.PerfsonarChecker.Dest1 }}" -dest2 "{{ .Values.PerfsonarChecker.Dest2 }}" -dest3 "{{ .Values.PerfsonarChecker.Dest3 }}" -dest1bw "{{ .Values.PerfsonarChecker.Dest1bw }}" -dest2bw "{{ .Values.PerfsonarChecker.Dest2bw }}" -dest3bw "{{ .Values.PerfsonarChecker.Dest3bw }}"
    priority=999
    autorestart = false
    startretries = 1
{{ if .Values.HTTPLogger.Enabled }}
  start-nginx.sh: |+
    #!/bin/bash -e
    apt-get update
    apt-get install openssl -y

    if [ -z $HTPASSWD ]; then
      PASS=$(tr -dc 'a-f0-9' < /dev/urandom | head -c16)
      echo "Your randomly generated logger credentials are"
      echo "**********************************************"
      echo "logger:$PASS"
      echo "**********************************************"
      HTPASSWD="$(openssl passwd -apr1 $(echo -n $PASS))"
    fi

    mkdir -p /etc/nginx/auth
    echo "logger:$HTPASSWD" > /etc/nginx/auth/htpasswd

    echo 'server {
      listen       8080;
      server_name  localhost;
      location / {
        default_type text/plain;
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/auth/htpasswd;  
        root   /usr/share/nginx/html;
        autoindex  on;
      }
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }' > /etc/nginx/conf.d/default.conf
    exec nginx -g 'daemon off;'
{{ end }}
