# Instance to label use case of Grafana deployment
# Generates app name as "grafana-[Instance]"
# Enables unique instances of Grafana in one namespace
Instance: global

Service:
  # Port that the service will utilize.
  Port: 80
  # Controls how your service is can be accessed. Valid values are:
  # - LoadBalancer - This ensures that your service has a unique, externally
  #                  visible IP address
  # - NodePort - This will give your service the IP address of the cluster node 
  #              on which it runs. If that address is public, the service will 
  #              be externally accessible. Using this setting allows your 
  #              service to share an IP address with other unrelated services. 
  # - ClusterIP - Your service will only be accessible on the cluster's internal 
  #               kubernetes network. Use this if you only want to connect to 
  #               your service from other services running on the same cluster. 
  ExternalVisibility: LoadBalancer

# Default Username and Password for Grafana account
# May be used to login to Grafana web portal this app launches, but should be changed afterwards
adminUser: slate
adminPassword: changeme

## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
##
datasources: {}

## Configure grafana dashboard providers
## ref: http://docs.grafana.org/administration/provisioning/#dashboards
dashboardProviders: {}

## Configure grafana dashboard to import
## NOTE: To use dashboards you must also enable/configure dashboardProviders
## ref: https://grafana.com/dashboards
dashboards: {}

## Reference to external ConfigMap per provider. Use provider name as key and ConfiMap name as value.
## A provider dashboards must be defined either by external ConfigMaps or in values.yaml, not in both.
dashboardsConfigMaps: {}

## Grafana's primary configuration
## NOTE: values in map will be converted to ini format
## ref: http://docs.grafana.org/installation/configuration/
##
grafana.ini:
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
ldap:
  # `config` is the content of `ldap.toml` that will be stored in the created secret
  config: ""
### SLATE-START ###
SLATE:
  Instance:
    ID: "untagged"
### SLATE-END ###
