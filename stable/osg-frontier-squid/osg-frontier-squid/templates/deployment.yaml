apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osg-frontier-squid.fullname" . }}
  labels:
    app: {{ template "osg-frontier-squid.name" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance | quote }}
    instanceID: {{ .Values.SLATE.Instance.ID | quote  }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "osg-frontier-squid.name" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance | quote }}

  template:
    metadata:
      labels:
        app: {{ template "osg-frontier-squid.name" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance | quote }}
    spec:
      nodeSelector:
        # Required affinity for using local storage
        {{ if .Values.SLATE.LocalStorage }}
        storage: "local"
        {{ end }}
        # For Node Selection
        {{ if .Values.NodeSelection.Hostname }}
        kubernetes.io/hostname: {{ .Values.NodeSelection.Hostname }}
        {{ end }}
      containers:
      # Container for the primary application, OSG Frontier Squid
      - name: osg-frontier-squid
        image: "hub.opensciencegrid.org/opensciencegrid/frontier-squid:{{ .Values.ImageTag | default "release" }}"
        imagePullPolicy: Always
        env:
        - name: SQUID_IPRANGE
          value: {{ .Values.SquidConf.IPRange }}
        - name: SQUID_CACHE_MEM
        {{- if .Values.SquidConf.CPU }}
          value: '{{ div .Values.SquidConf.CacheMem .Values.SquidConf.CPU }} MB'  
        {{- else }} 
          value: '{{ .Values.SquidConf.CacheMem }} MB'  
        {{- end }}
        {{ if .Values.SquidConf.CacheSize }}
        - name: SQUID_CACHE_DISK
          value: '{{ .Values.SquidConf.CacheSize }}'
        {{ end }}
        {{ if .Values.SquidConf.MaxAccessLog }}
        - name: SQUID_MAX_ACCESS_LOG
          value: {{ .Values.SquidConf.MaxAccessLog }}
        {{ end }} 
        {{ if .Values.Alarm.AaasServer }}
        - name: AAAS_SERVER
          value: '{{ .Values.Alarm.AaasServer }}'
        {{ end }}
        resources:
          requests:
            {{ if .Values.SquidConf.CPU }}
            cpu: {{ .Values.SquidConf.CPU }}
            {{ else }} 
            cpu: 1
            {{ end }}
        {{ if not  .Values.SquidConf.CacheDirOnHost }}
# converting CacheSize to MiB and adding it to total request
            ephemeral-storage: {{ add .Values.SquidConf.RequestEphemeralSize  (floor (div (mul .Values.SquidConf.CacheSize 9537) 10000))  }}Mi
          limits:
# converting CacheSize to MiB and adding it to total limit
            ephemeral-storage: {{ add .Values.SquidConf.LimitEphemeralSize  (floor (div (mul .Values.SquidConf.CacheSize 9537) 10000))  }}Mi
        {{ else }}
            ephemeral-storage: {{ .Values.SquidConf.RequestEphemeralSize  }}Mi
          limits:
            ephemeral-storage: {{ .Values.SquidConf.LimitEphemeralSize  }}Mi
        {{ end }}
        ports:
        - containerPort: 3128
          name: squid
        - containerPort: 3401
          name: monitoring
          protocol: UDP
          {{ if and .Values.NodeSelection.Hostname .Values.NodeSelection.OpenDefaultMonPort }}
          hostPort: 3401
          {{ end }}
        {{ if and .Values.NodeSelection.Hostname .Values.Alarm.Site }}
        livenessProbe:
          exec:
            command: ["/bin/sh","-c","/usr/local/sbin/heartbeat.sh {{ .Values.Instance }} {{ .Values.Alarm.Site }}"]
          initialDelaySeconds: 10
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","/usr/local/sbin/squid-pre-stop-alarm.sh {{ .Values.Instance }} {{ .Values.NodeSelection.Hostname }} {{ .Values.Alarm.Site }}"]
        {{ end }}
        volumeMounts:
# Commented out and will probably not be needed. We're using the default 60-image-post-init.sh script 
# that comes with upstream image. Our custom config has been moved to the .awk file added through configmap
#        - name: osg-frontier-squid-{{ .Values.Instance }}-conf
#          mountPath: /etc/osg/image-config.d/60-image-post-init.sh
#          subPath: 60-image-post-init.sh 
        {{ if .Values.SquidConf.CacheDirOnHost }}
        - name: osg-frontier-squid-{{ .Values.Instance }}-cachedir
          mountPath: /var/cache/squid 
        {{ else if .Values.SLATE.LocalStorage }}
        - mountPath: /var/cache/squid
          name: osg-frontier-squid-{{ .Values.Instance }}-data
        {{ end }} 
        {{ if .Values.SquidConf.LogToStdout }}
        - name: osg-frontier-squid-{{ .Values.Instance }}-conf
          mountPath: /etc/supervisord.d/50-squid-log-dump.conf
          subPath: 50-squid-log-dump.conf 
        {{ end }}
        {{ if .Values.SquidConf.CleanLog }}
        - name: osg-frontier-squid-{{ .Values.Instance }}-conf
          mountPath: /etc/supervisord.d/55-squid-log-clean.conf
          subPath: 55-squid-log-clean.conf 
        {{ end }}
        - mountPath: /etc/squid/customize.d/60-customization.awk
          subPath: 60-customization.awk
          name: osg-frontier-squid-{{ .Values.Instance }}-awk
        {{ if .Values.Pod.UseHostTimezone }}
        - name: tz
          mountPath: /etc/localtime
          readOnly: true
        {{ end }}
        {{ if and .Values.SquidConf.UseHostpathLogDir .Values.NodeSelection.Hostname }}
        - name: squid-log-dir
          mountPath: /var/log/squid
        {{ end }}
        {{ if and .Values.NodeSelection.Hostname .Values.Alarm.Site }}
        - name: osg-frontier-squid-{{ .Values.Instance }}-conf
          mountPath: /usr/local/sbin/squid-pre-stop-alarm.sh
          subPath: squid-pre-stop-alarm.sh 
        - name: osg-frontier-squid-{{ .Values.Instance }}-conf
          mountPath: /usr/local/sbin/heartbeat.sh
          subPath: heartbeat.sh
        {{ end }}
      volumes:
        {{ if .Values.SquidConf.CacheDirOnHost }}
        - name: osg-frontier-squid-{{ .Values.Instance }}-cachedir
          hostPath:
            path: /var/cache/squid
            type: Directory
        {{ end }} 
        - name: osg-frontier-squid-{{ .Values.Instance }}-awk
          configMap:
            name: {{ template "osg-frontier-squid.fullname" . }}
            items:
            - key: 60-customization.awk
              path: 60-customization.awk
              mode: 420
        - name: osg-frontier-squid-{{ .Values.Instance }}-conf
          configMap:
            name: {{ template "osg-frontier-squid.fullname" . }}
            items:
            - key: 60-image-post-init.sh
              path: 60-image-post-init.sh
              mode: 448
            {{ if .Values.SquidConf.LogToStdout }}
            - key: 50-squid-log-dump.conf
              path: 50-squid-log-dump.conf
            {{ end }}
            {{ if .Values.SquidConf.CleanLog }}
            - key: 55-squid-log-clean.conf
              path: 55-squid-log-clean.conf
            {{ end }}
            {{ if and .Values.NodeSelection.Hostname .Values.Alarm.Site }}
            - key: squid-pre-stop-alarm.sh
              path: squid-pre-stop-alarm.sh
              mode: 448
            - key: heartbeat.sh
              path: heartbeat.sh
              mode: 448
            {{ end }}
        - name: osg-frontier-squid-{{ .Values.Instance }}-data
        {{ if .Values.SLATE.LocalStorage }}
          persistentVolumeClaim:
            claimName: osg-frontier-squid-{{ .Values.Instance }}-pvc
        {{ else }}
          emptyDir: {}
        {{ end }}
        {{ if .Values.Pod.UseHostTimezone }}
        - name: tz
          hostPath:
            path: /etc/localtime
        {{ end }}
        {{ if and .Values.SquidConf.UseHostpathLogDir .Values.NodeSelection.Hostname }}
        - name: squid-log-dir
          hostPath:
            path: /var/log/slate/hostPath/osg-frontier-squid
            type: Directory
        {{ end }}
